import streamlit as st
import pandas as pd
import re

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤,
# —á—Ç–æ–±—ã –æ–Ω–∏ –æ—Ç–æ–±—Ä–∞–∂–∞–ª–∏—Å—å –≤ –≤–∏–¥–µ —Å–ø–∏—Å–∫–æ–≤ —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏
def format_ingredients(ingredients_text: str) -> str:
    """
    –†–∞–∑–±–∏–≤–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ –ø–æ —Å–∫–æ–±–∫–∞–º –∏ –∑–∞–ø—è—Ç—ã–º,
    –¥–æ–±–∞–≤–ª—è—è –ø–µ—Ä–µ–Ω–æ—Å—ã —Å—Ç—Ä–æ–∫ –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ —á—Ç–µ–Ω–∏—è.
    """
    # –®–∞–≥ 1: –ó–∞–º–µ–Ω—è–µ–º "–∑–∞–ø—è—Ç–∞—è + —Å–∫–æ–±–∫–∞" –Ω–∞ –ø—Ä–æ–±–µ–ª + —Å–∫–æ–±–∫–∞, —á—Ç–æ–±—ã –Ω–µ —Å–∫–ª–µ–∏–≤–∞–ª–∏—Å—å —Å–ª–æ–≤–∞
    text = re.sub(r",\s*\)", ") ", ingredients_text)

    # –®–∞–≥ 2: –†–∞–∑–±–∏–≤–∞–µ–º –ø–æ —à–∞–±–ª–æ–Ω—É: ') ' –∏–ª–∏ ',' –≤ –∫–æ–Ω—Ü–µ —Å—Ç—Ä–æ–∫–∏
    # r"\)\s|,$" –∑–Ω–∞—á–∏—Ç:
    # - \)\s : –∑–∞–∫—Ä—ã–≤–∞—é—â–∞—è —Å–∫–æ–±–∫–∞ –∏ –ø—Ä–æ–±–µ–ª
    # - ,$   : –∑–∞–ø—è—Ç–∞—è –≤ –∫–æ–Ω—Ü–µ —Å—Ç—Ä–æ–∫–∏
    pattern = r"\)\s|,$"
    raw_items = re.split(pattern, text)

    # –®–∞–≥ 3: –£–±–∏—Ä–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –∏ –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
    cleaned = [item.strip() for item in raw_items if item.strip()]

    # –®–∞–≥ 4: –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–∫—Ä—ã–≤–∞—é—â—É—é —Å–∫–æ–±–∫—É, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    final_list = []
    for item in cleaned:
        if not item.endswith(")"):
            item += ")"
        final_list.append(item)

    # –®–∞–≥ 5: –§–æ—Ä–º–∏—Ä—É–µ–º –∏—Ç–æ–≥–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ —Å –º–∞—Ä–∫–µ—Ä–∞–º–∏ '-'
    result = "\n- ".join(final_list)
    return f"- {result}"


# –ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤ –∏–∑ CSV
recipes_df = pd.read_csv('updated_recipes_with_cherry.csv')

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.title("–ö—É–ª–∏–Ω–∞—Ä–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ üç≥")

# –ü–æ–∏—Å–∫ –ø–æ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—É
st.header("üîç –ü–æ–∏—Å–∫ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –ø–æ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—É")
ingredient = st.text_input("–í–≤–µ–¥–∏—Ç–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞:")

if ingredient:
    # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ä–µ—Ü–µ–ø—Ç–æ–≤ –ø–æ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—É
    filtered_recipes = recipes_df[
        recipes_df['–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã'].str.contains(ingredient, case=False, na=False)
    ]
    if not filtered_recipes.empty:
        st.subheader("üçΩÔ∏è –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã:")
        for _, row in filtered_recipes.iterrows():
            st.markdown(f"## {row['–ù–∞–∑–≤–∞–Ω–∏–µ']}")
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –∏ –≤—ã–≤–æ–¥–∏–º
            formatted_ingredients = format_ingredients(str(row['–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã']))
            st.markdown(f"**–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:**\n{formatted_ingredients}")
            st.write(f"**–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:**\n{row['–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è']}")
    else:
        st.write("üòî –†–µ—Ü–µ–ø—Ç—ã —Å —ç—Ç–∏–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Å–µ—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤
st.header("üìã –í—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã")
for _, row in recipes_df.iterrows():
    st.markdown(f"### {row['–ù–∞–∑–≤–∞–Ω–∏–µ']}")
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é format_ingredients –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
    formatted_ingredients = format_ingredients(str(row['–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã']))
    st.markdown(f"**–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:**\n{formatted_ingredients}")
    st.write(f"**–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:**\n{row['–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è']}")
