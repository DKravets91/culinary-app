import streamlit as st
import pandas as pd
import re

def format_ingredients(ingredients_text: str) -> str:
    """
    –†–∞–∑–±–∏–≤–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤ –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –ø—É–Ω–∫—Ç—ã.
    –£—á–∏—Ç—ã–≤–∞–µ—Ç —Å–ª—É—á–∞–∏, –∫–æ–≥–¥–∞ –ø–æ—Å–ª–µ '—à—Ç.' —Å—Ä–∞–∑—É –∏–¥—ë—Ç –Ω–æ–≤—ã–π –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç.
    """

    # 1. –°—Ç–∞–≤–∏–º –ø–µ—Ä–µ–Ω–æ—Å —Å—Ç—Ä–æ–∫–∏ –ø–æ—Å–ª–µ ' —à—Ç.', –µ—Å–ª–∏ —Å–ª–µ–¥—É—é—â–µ–µ —Å–ª–æ–≤–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π –±—É–∫–≤—ã –∏–ª–∏ —Ü–∏—Ñ—Ä—ã.
    #    –ü—Ä–∏–º–µ—Ä: "4 —à—Ç. –ú—É–∫–∞" –ø—Ä–µ–≤—Ä–∞—â–∞–µ–º –≤ "4 —à—Ç.\n–ú—É–∫–∞"
    text = re.sub(r"(\d+\s*—à—Ç\.)\s+(?=[A-Z–ê-–Ø–Å0-9])", r"\1\n", ingredients_text)

    # 2. "–∑–∞–ø—è—Ç–∞—è + )" –ø—Ä–µ–≤—Ä–∞—â–∞–µ–º –≤ ") " (—á—Ç–æ–±—ã –Ω–µ —Å–ª–∏–ø–∞–ª–∏—Å—å)
    text = re.sub(r",\s*\)", ") ", text)

    # 3. –†–∞–∑–±–∏–≤–∞–µ–º –ø–æ —à–∞–±–ª–æ–Ω—É: ') ' –∏–ª–∏ ','
    #    - \)\s   –æ–∑–Ω–∞—á–∞–µ—Ç –∑–∞–∫—Ä—ã–≤–∞—é—â—É—é —Å–∫–æ–±–∫—É + –ø—Ä–æ–±–µ–ª
    #    - ,      –æ–∑–Ω–∞—á–∞–µ—Ç –∑–∞–ø—è—Ç—É—é
    pattern = r"\)\s|,"
    raw_items = re.split(pattern, text)

    # 4. –£–±–∏—Ä–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –∏ –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
    cleaned = [item.strip() for item in raw_items if item.strip()]

    # 5. –î–æ–±–∞–≤–ª—è–µ–º ')' –≤ –∫–æ–Ω–µ—Ü –ø—É–Ω–∫—Ç–∞, –µ—Å–ª–∏ –Ω–µ—Ç
    final_list = []
    for item in cleaned:
        if not item.endswith(")"):
            item += ")"
        final_list.append(item)

    # 6. –§–æ—Ä–º–∏—Ä—É–µ–º —Å–ø–∏—Å–æ–∫ —Å –º–∞—Ä–∫–µ—Ä–æ–º '- '
    result = "\n- ".join(final_list)
    return f"- {result}"


# –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª —Å —Ä–µ—Ü–µ–ø—Ç–∞–º–∏
recipes_df = pd.read_csv('updated_recipes_with_cherry.csv')

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.title("–ö—É–ª–∏–Ω–∞—Ä–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ üç≥")

# –ü–æ–∏—Å–∫ –ø–æ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—É
st.header("üîç –ü–æ–∏—Å–∫ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –ø–æ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—É")
ingredient = st.text_input("–í–≤–µ–¥–∏—Ç–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞:")

if ingredient:
    filtered_recipes = recipes_df[
        recipes_df['–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã'].str.contains(ingredient, case=False, na=False)
    ]
    if not filtered_recipes.empty:
        st.subheader("üçΩÔ∏è –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã:")
        for _, row in filtered_recipes.iterrows():
            st.markdown(f"## {row['–ù–∞–∑–≤–∞–Ω–∏–µ']}")
            formatted_ingredients = format_ingredients(str(row['–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã']))
            st.markdown(f"**–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:**\n{formatted_ingredients}")
            st.write(f"**–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:**\n{row['–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è']}")
    else:
        st.write("üòî –†–µ—Ü–µ–ø—Ç—ã —Å —ç—Ç–∏–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Å–µ—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤
st.header("üìã –í—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã")
for _, row in recipes_df.iterrows():
    st.markdown(f"### {row['–ù–∞–∑–≤–∞–Ω–∏–µ']}")
    formatted_ingredients = format_ingredients(str(row['–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã']))
    st.markdown(f"**–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:**\n{formatted_ingredients}")
    st.write(f"**–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:**\n{row['–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è']}")
