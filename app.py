import streamlit as st
import pandas as pd
import re


@st.cache_data
def load_and_parse(csv_path):
    """–°—á–∏—Ç—ã–≤–∞–µ–º —Å—Ç–∞—Ä—ã–π —Ñ–∞–π–ª (3 –∫–æ–ª–æ–Ω–∫–∏),
       –∞ –∑–∞—Ç–µ–º –Ω–∞ –ª–µ—Ç—É –≤—ã–¥–µ–ª—è–µ–º '–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ' –∏ '–ö–∞—Ç–µ–≥–æ—Ä–∏—è'."""
    df_old = pd.read_csv(csv_path)

    # –£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã –≤ –Ω–∞–∑–≤–∞–Ω–∏—è—Ö —Å—Ç–æ–ª–±—Ü–æ–≤, –µ—Å–ª–∏ –µ—Å—Ç—å
    df_old.columns = df_old.columns.str.strip()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –Ω—É–∂–Ω—ã–µ —Å—Ç–æ–ª–±—Ü—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç
    needed = {"–†–µ—Ü–µ–ø—Ç", "–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã", "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"}
    missing = needed - set(df_old.columns)
    if missing:
        # –ï—Å–ª–∏ —á–µ–≥–æ-—Ç–æ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç, –≤–µ—Ä–Ω—ë–º –ø—É—Å—Ç–æ–π DataFrame –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
        st.error(f"–ù–µ –Ω–∞–π–¥–µ–Ω—ã —Å—Ç–æ–ª–±—Ü—ã: {missing}")
        return pd.DataFrame()

    new_rows = []
    for _, row in df_old.iterrows():
        recipe_name = row["–†–µ—Ü–µ–ø—Ç"].strip()
        instruction = row["–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"]

        # –ò–º–µ–µ–º –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É —Å –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞–º–∏ (–º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤,
        # —Ä–∞–∑–¥–µ–ª—è–µ–º—ã—Ö —Å–∏–º–≤–æ–ª–æ–º –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏)
        ingredients_list = str(row["–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã"]).split("\n")

        for ing in ingredients_list:
            # –ü–æ–∏—Å–∫ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ (–ø—Ä–∏–º–µ—Ä: "100 –≥", "2 —à—Ç.", "50 –º–ª", "1 —â–µ–ø–æ—Ç–∫–∞")
            quantity_match = re.search(r"(\d+\s?(–≥|–≥—Ä|–º–ª|—à—Ç|kg|–ª|—Å—Ç\.–ª|—á\.–ª|—â–µ–ø–æ—Ç–∫–∞))", ing)
            quantity = quantity_match.group(0) if quantity_match else ""

            # –ü–æ–∏—Å–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, –æ–Ω–∞ –≤ —Å–∫–æ–±–∫–∞—Ö: "–¢–≤–æ—Ä–æ–≥ 5% (–º–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã)")
            category_match = re.search(r"\((.*?)\)", ing)
            category = category_match.group(1) if category_match else ""

            # –£–±–µ—Ä—ë–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ –Ω–∞–∑–≤–∞–Ω–∏—è –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–∞
            ing_clean = re.sub(r"\(.*?\)", "", ing)  # —É–±–∏—Ä–∞–µ–º (‚Ä¶)
            ing_clean = re.sub(r"(\d+\s?(–≥|–≥—Ä|–º–ª|—à—Ç|kg|–ª|—Å—Ç\.–ª|—á\.–ª|—â–µ–ø–æ—Ç–∫–∞))", "", ing_clean)
            ing_clean = ing_clean.strip(" -")

            new_rows.append({
                "–†–µ—Ü–µ–ø—Ç": recipe_name,
                "–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç": ing_clean.strip(),
                "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ": quantity.strip(),
                "–ö–∞—Ç–µ–≥–æ—Ä–∏—è": category.strip(),
                "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è": instruction
            })

    df_new = pd.DataFrame(new_rows)
    return df_new


def main():
    st.title("–ö—É–ª–∏–Ω–∞—Ä–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ üç≥")

    # 1. –ó–∞–≥—Ä—É–∂–∞–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π CSV (3 –∫–æ–ª–æ–Ω–∫–∏), –ø–∞—Ä—Å–∏–º –≤ DataFrame (5 –∫–æ–ª–æ–Ω–æ–∫)
    df = load_and_parse("recipes.csv")

    if df.empty:
        return  # –µ—Å–ª–∏ –ø–∞—Ä—Å–∏–Ω–≥ –Ω–µ —É–¥–∞–ª—Å—è

    st.header("üîç –ü–æ–∏—Å–∫ —Ä–µ—Ü–µ–ø—Ç–æ–≤ –ø–æ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—É")
    ingredient_search = st.text_input("–í–≤–µ–¥–∏—Ç–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞:")
    if ingredient_search:
        filtered = df[df["–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç"].str.contains(ingredient_search, case=False, na=False)]
        if not filtered.empty:
            st.subheader("üçΩÔ∏è –ù–∞–π–¥–µ–Ω–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã:")
            grouped = filtered.groupby("–†–µ—Ü–µ–ø—Ç")
            for recipe_name, group in grouped:
                st.markdown(f"## {recipe_name}")
                st.markdown("**–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:**")
                for _, row in group.iterrows():
                    st.markdown(f"- {row['–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç']} ‚Äî {row['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ']} ({row['–ö–∞—Ç–µ–≥–æ—Ä–∏—è']})")
                st.markdown(f"**–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:**\n{group.iloc[0]['–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è']}")
        else:
            st.write("üòî –†–µ—Ü–µ–ø—Ç—ã —Å —ç—Ç–∏–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–º –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")

    st.header("üìã –í—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã")
    all_grouped = df.groupby("–†–µ—Ü–µ–ø—Ç")
    for recipe_name, group in all_grouped:
        st.markdown(f"### {recipe_name}")
        st.markdown("**–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:**")
        for _, row in group.iterrows():
            st.markdown(f"- {row['–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç']} ‚Äî {row['–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ']} ({row['–ö–∞—Ç–µ–≥–æ—Ä–∏—è']})")
        st.markdown(f"**–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:**\n{group.iloc[0]['–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è']}")
        st.write("---")


if __name__ == "__main__":
    main()
