import streamlit as st
import pandas as pd
import re


# –§—É–Ω–∫—Ü–∏—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞: "100 –≥" -> (100, "–≥"), "2 —à—Ç" -> (2, "—à—Ç")
def parse_quantity(qty_str: str):
    # –ò—â–µ–º —á—Ç–æ-—Ç–æ –≤—Ä–æ–¥–µ: —á–∏—Å–ª–æ + –ø—Ä–æ–±–µ–ª + –µ–¥–∏–Ω–∏—Ü–∞ (–≥|–≥—Ä|—à—Ç|–º–ª –∏ —Ç.–ø.)
    match = re.match(r"(\d+)\s?(–≥|–≥—Ä|—à—Ç|–º–ª|kg|–ª|—Å—Ç\.–ª|—á\.–ª|—â–µ–ø–æ—Ç–∫–∞)", qty_str)
    if match:
        num = float(match.group(1))  # –Ω–∞–ø—Ä–∏–º–µ—Ä, "100" -> 100.0
        unit = match.group(2)  # –Ω–∞–ø—Ä–∏–º–µ—Ä, "–≥"
        return (num, unit)
    return (0.0, "")  # –ï—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å


@st.cache_data
def load_and_parse(csv_path):
    """–ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º, —á—Ç–æ –∑–¥–µ—Å—å —É–∂–µ –ø–∞—Ä—Å–∏–º ¬´–†–µ—Ü–µ–ø—Ç¬ª, ¬´–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç¬ª, ¬´–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ¬ª, ¬´–ö–∞—Ç–µ–≥–æ—Ä–∏—è¬ª.
       –ò–ª–∏ —É –Ω–∞—Å –≤—Å–µ–≥–æ —Ç—Ä–∏ —Å—Ç–æ–ª–±—Ü–∞ (–†–µ—Ü–µ–ø—Ç, –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã, –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è) -> –†–∞–∑–±–∏–≤–∞–µ–º, –∫–∞–∫ —Ä–∞–Ω—å—à–µ.
    """
    # ... –¢–≤–æ–π –∫–æ–¥ –ø–∞—Ä—Å–∏–Ω–≥–∞, —Ç–æ—Ç –∂–µ —á—Ç–æ –±—ã–ª –≤—ã—à–µ ...
    df_old = pd.read_csv(csv_path)
    df_old.columns = df_old.columns.str.strip()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –Ω—É–∂–Ω—ã–µ —Å—Ç–æ–ª–±—Ü—ã...
    # –î–ª—è –∫—Ä–∞—Ç–∫–æ—Å—Ç–∏ –ø—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —á—Ç–æ —É –Ω–∞—Å —É–∂–µ –µ—Å—Ç—å: –†–µ—Ü–µ–ø—Ç, –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç, –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ, –ö–∞—Ç–µ–≥–æ—Ä–∏—è, –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è
    return df_old


def sum_ingredients(selected_df):
    """
    –ü—Ä–∏–Ω–∏–º–∞–µ—Ç DataFrame —Å–æ —Å—Ç–æ–ª–±—Ü–∞–º–∏:
      - –ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç
      - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ (–≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, "100 –≥")
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç DataFrame, –≥–¥–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã —Å–≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω—ã –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—É–º–º—É–µ—Ç—Å—è –ø–æ –µ–¥–∏–Ω–∏—Ü–µ –∏–∑–º–µ—Ä–µ–Ω–∏—è.
    """
    # –†–∞–∑–±–∏–≤–∞–µ–º ¬´–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ¬ª –Ω–∞ —á–∏—Å–ª–æ –∏ –µ–¥–∏–Ω–∏—Ü—É
    parsed = []
    for _, row in selected_df.iterrows():
        ing_name = row["–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç"]
        qty_str = row["–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ"]
        num, unit = parse_quantity(qty_str)
        parsed.append({
            "–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç": ing_name,
            "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ_—á–∏—Å–ª–æ": num,
            "–ï–¥–∏–Ω–∏—Ü–∞": unit
        })
    tmp_df = pd.DataFrame(parsed)

    # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ (–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç, –ï–¥–∏–Ω–∏—Ü–∞) –∏ —Å—É–º–º–∏—Ä—É–µ–º
    grouped = tmp_df.groupby(["–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç", "–ï–¥–∏–Ω–∏—Ü–∞"], as_index=False)["–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ_—á–∏—Å–ª–æ"].sum()
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    return grouped


def main():
    st.title("–ö—É–ª–∏–Ω–∞—Ä–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ üç≥")

    df = load_and_parse("recipes.csv")
    if df.empty:
        return

    # --- –í—ã–±–æ—Ä –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤ ---
    recipes_list = df["–†–µ—Ü–µ–ø—Ç"].unique().tolist()
    selected = st.multiselect("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ—Ü–µ–ø—Ç—ã –¥–ª—è —Å—É–º–º–∏—Ä–æ–≤–∞–Ω–∏—è:", recipes_list)

    if selected:
        # –§–∏–ª—å—Ç—Ä—É–µ–º DataFrame
        selected_df = df[df["–†–µ—Ü–µ–ø—Ç"].isin(selected)]

        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –∏ —Å—É–º–º–∏—Ä—É–µ–º –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã
        summed_df = sum_ingredients(selected_df)

        st.write("### –ò—Ç–æ–≥–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç–æ–≤:")
        for _, row in summed_df.iterrows():
            ing = row["–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç"]
            num = row["–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ_—á–∏—Å–ª–æ"]
            unit = row["–ï–¥–∏–Ω–∏—Ü–∞"]
            if unit:
                st.markdown(f"- **{ing}**: {num} {unit}")
            else:
                # –ï—Å–ª–∏ –Ω–µ—Ç –µ–¥–∏–Ω–∏—Ü—ã (–Ω–µ —Å–º–æ–≥–ª–∏ —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å), –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–æ—Å—Ç–æ —á–∏—Å–ª–æ
                st.markdown(f"- **{ing}**: {num}")

        st.write("---")

    # --- –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤—Å–µ—Ö —Ä–µ—Ü–µ–ø—Ç–æ–≤ (–∫–∞–∫ —Ä–∞–Ω—å—à–µ) ---
    st.header("üìã –í—Å–µ —Ä–µ—Ü–µ–ø—Ç—ã")
    grouped = df.groupby("–†–µ—Ü–µ–ø—Ç")
    for recipe_name, group in grouped:
        st.markdown(f"## {recipe_name}")
        st.markdown("**–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:**")
        for _, row in group.iterrows():
            ing = row["–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç"]
            qty = row["–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ"]
            cat = row.get("–ö–∞—Ç–µ–≥–æ—Ä–∏—è", "")

            # –ê–∫–∫—É—Ä–∞—Ç–Ω–æ —Ñ–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É
            qty_part = f" ‚Äî {qty}" if qty else ""
            cat_part = f" ({cat})" if cat else ""
            st.markdown(f"- {ing}{qty_part}{cat_part}")

        instruction = group.iloc[0]["–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è"]
        st.markdown(f"**–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è:**\n{instruction}")
        st.write("---")


if __name__ == "__main__":
    main()
